{
  "RandomTuning": {
    "OLS": {
      "apply": false,
      "tuningParams": {}
    },
    "TheilSen": {
      "apply": false,
      "tuningParams": {}
    },
    "Huber": {
      "apply": false,
      "tuningParams": {}
    },
    "KnnRegr": {
      "apply": false,
      "tuningParams": {
        "n_neighbors": {
          "min": 4,
          "max": 12
        },
        "leaf_size": {
          "min": 10,
          "max": 50
        },
        "weights": [
          "uniform",
          "distance"
        ],
        "p": [
          1,
          2
        ],
        "algorithm": [
          "auto",
          "ball_tree",
          "kd_tree",
          "brute"
        ]
      }
    },
    "DecTreeRegr": {
      "apply": false,
      "tuningParams": {
        "max_depth": [
          3,
          0
        ],
        "min_samples_split": {
          "min": 2,
          "max": 6
        },
        "min_samples_leaf": {
          "min": 1,
          "max": 4
        }
      }
    },
    "SVR": {
      "apply": false,
      "tuningParams": {
        "kernel": [
          "linear",
          "rbf"
        ],
        "epsilon": [
          0.05,
          0.1,
          0.2
        ],
        "C": [
          1,
          2,
          5,
          10
        ]
      }
    },
    "RandForRegr": {
      "apply": true,
      "tuningParams": {
        "max_depth": [
          3,
          2,
          1,
          0
        ],
        "n_estimators": {
          "min": 10,
          "max": 50
        },
        "max_features": {
          "min": 1,
          "max": 12
        },
        "min_samples_split": {
          "min": 2,
          "max": 6
        },
        "min_samples_leaf": {
          "min": 1,
          "max": 4
        },
        "bootstrap": [
          true,
          false
        ]
      }
    },
    "MLP": {
      "apply": false,
      "tuningParams": {
        "hidden_layer_sizes": [
          [
            8,
            12
          ],
          [
            40,
            40
          ],
          [
            100,
            100
          ]
        ],
        "solver": [
          "lbfgs",
          "sgd",
          "adam"
        ],
        "alpha": {
          "min": 0.0001,
          "max": 0.001
        },
        "max_iter": {
          "min": 200,
          "max": 300
        }
      }
    }
  }
}
